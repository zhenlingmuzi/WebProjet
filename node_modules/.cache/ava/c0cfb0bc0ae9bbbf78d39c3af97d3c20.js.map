{"version":3,"sources":["characters-tests.js"],"names":["request","require","app","DB","getCharacters","getCharacterOne","postCharacter","deleteCharacter","putCharacter","sql","serial","t","accessor","query","then","get","res","is","status","deepEqual","body","result","catch","error","parameters","id","post","send","delete","put"],"mappings":";;;;;AAAA;;;;;;AACA,MAAMA,UAAUC,QAAQ,WAAR,CAAhB;AACA,MAAMC,MAAMD,QAAQ,QAAR,CAAZ;AACA,MAAME,KAAKF,QAAQ,oBAAR,CAAX;;AAEA;AACA,MAAMG,gBAAgBH,QAAQ,0CAAR,CAAtB;AACA,MAAMI,kBAAkBJ,QAAQ,4CAAR,CAAxB;AACA,MAAMK,gBAAgBL,QAAQ,2CAAR,CAAtB;AACA,MAAMM,kBAAkBN,QAAQ,+CAAR,CAAxB;AACA,MAAMO,eAAeP,QAAQ,4CAAR,CAArB;AACA,MAAMQ,MAAMN,GAAGM,GAAH,CAAO,yBAAP,CAAZ;;AAEA,cAAKC,MAAL,CAAY,uCAAZ,EAAqDC,KAAK;AACxD,SAAOR,GAAGS,QAAH,CAAYC,KAAZ,CAAkBJ,GAAlB,EACJK,IADI,CACC,MAAM;AACV,WAAOd,QAAQE,GAAR,EACJa,GADI,CACA,aADA,EAEJD,IAFI,CAEEE,GAAD,IAAS;AAAA;AAAA;AAAA;;AACbL,QAAEM,EAAF,uBAAK,sCAAIC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiB,GAAjB;AACAP,QAAEQ,SAAF,yBAAY,uCAAIC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAsB,iDAAcC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KALI,CAAP;AAMD,GARI,EASJC,KATI,CASGC,KAAD,IAAW;AAChB,UAAMA,KAAN;AACD,GAXI,CAAP;AAYD,CAbD;;AAeA,cAAKb,MAAL,CAAY,yCAAyCL,gBAAgBmB,UAAhB,CAA2BC,EAAhF,EAAoFd,KAAK;AACvF,SAAOR,GAAGS,QAAH,CAAYC,KAAZ,CAAkBJ,GAAlB,EACJK,IADI,CACC,MAAM;AACV,WAAOd,QAAQE,GAAR,EACJa,GADI,CACA,iBAAiBV,gBAAgBmB,UAAhB,CAA2BC,EAD5C,EAEJX,IAFI,CAEEE,GAAD,IAAS;AAAA;AAAA;AAAA;;AACbL,QAAEM,EAAF,yBAAK,uCAAIC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiB,GAAjB;AACAP,QAAEQ,SAAF,yBAAY,uCAAIC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAsB,mDAAgBC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KALI,CAAP;AAMD,GARI,EASJC,KATI,CASGC,KAAD,IAAW;AAChB,UAAMA,KAAN;AACD,GAXI,CAAP;AAYD,CAbD;;AAeA,cAAKb,MAAL,CAAY,sCAAZ,EAAoDC,KAAK;AACvD,SAAOR,GAAGS,QAAH,CAAYC,KAAZ,CAAkBJ,GAAlB,EACJK,IADI,CACC,MAAM;AACV,WAAOd,QAAQE,GAAR,EACJwB,IADI,CACC,cADD,EAEJC,IAFI,CAECrB,cAAcc,IAFf,EAGJN,IAHI,CAGEE,GAAD,IAAS;AAAA;AAAA;AAAA;;AACbL,QAAEM,EAAF,yBAAK,uCAAIC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiB,GAAjB;AACAP,QAAEQ,SAAF,yBAAY,uCAAIC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAsB,iDAAcC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KANI,CAAP;AAOD,GATI,EAUJC,KAVI,CAUGC,KAAD,IAAW;AAChB,UAAMA,KAAN;AACD,GAZI,CAAP;AAaD,CAdD;;AAgBA,cAAKb,MAAL,CAAY,oDAAoDH,gBAAgBiB,UAAhB,CAA2BC,EAA3F,EAA+Fd,KAAK;AAClG,SAAOR,GAAGS,QAAH,CAAYC,KAAZ,CAAkBJ,GAAlB,EACJK,IADI,CACC,MAAM;AACV,WAAOd,QAAQE,GAAR,EACJ0B,MADI,CACG,iBAAiBrB,gBAAgBiB,UAAhB,CAA2BC,EAD/C,EAEJX,IAFI,CAEEE,GAAD,IAAS;AAAA;AAAA;AAAA;;AACbL,QAAEM,EAAF,2BAAK,wCAAIC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiB,GAAjB;AACAP,QAAEQ,SAAF,2BAAY,wCAAIC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAsB,oDAAgBC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KALI,CAAP;AAMD,GARI,EASJC,KATI,CASGC,KAAD,IAAW;AAChB,UAAMA,KAAN;AACD,GAXI,CAAP;AAYD,CAbD;;AAeA,cAAKb,MAAL,CAAY,iDAAiDF,aAAagB,UAAb,CAAwBC,EAArF,EAAyFd,KAAK;AAC5F,SAAOR,GAAGS,QAAH,CAAYC,KAAZ,CAAkBJ,GAAlB,EACJK,IADI,CACC,MAAM;AACV,WAAOd,QAAQE,GAAR,EACJ2B,GADI,CACA,iBAAiBrB,aAAagB,UAAb,CAAwBC,EADzC,EAEJE,IAFI,CAECnB,aAAaY,IAFd,EAGJN,IAHI,CAGEE,GAAD,IAAS;AAAA;AAAA;AAAA;;AACbL,QAAEM,EAAF,2BAAK,wCAAIC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiB,GAAjB;AACAP,QAAEQ,SAAF,2BAAY,wCAAIC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAsB,iDAAaC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KANI,CAAP;AAOD,GATI,EAUJC,KAVI,CAUGC,KAAD,IAAW;AAChB,UAAMA,KAAN;AACD,GAZI,CAAP;AAaD,CAdD","file":"characters-tests.js","sourcesContent":["import test from 'ava';\nconst request = require('supertest');\nconst app = require('../app');\nconst DB = require('../models/Database');\n\n// The awaited results\nconst getCharacters = require('./results/characters/get-characters.json');\nconst getCharacterOne = require('./results/characters/get-characters-1.json');\nconst postCharacter = require('./results/characters/post-characters.json');\nconst deleteCharacter = require('./results/characters/delete-characters-1.json');\nconst putCharacter = require('./results/characters/put-characters-1.json');\nconst sql = DB.sql('../dumps/data-tests.sql');\n\ntest.serial('Characters - GET - Get all characters', t => {\n  return DB.accessor.query(sql)\n    .then(() => {\n      return request(app)\n        .get('/characters')\n        .then((res) => {\n          t.is(res.status, 200);\n          t.deepEqual(res.body, getCharacters.result);\n        })\n    })\n    .catch((error) => {\n      throw error;\n    });\n});\n\ntest.serial('Characters - GET - Get character id ' + getCharacterOne.parameters.id, t => {\n  return DB.accessor.query(sql)\n    .then(() => {\n      return request(app)\n        .get('/characters/' + getCharacterOne.parameters.id)\n        .then((res) => {\n          t.is(res.status, 200);\n          t.deepEqual(res.body, getCharacterOne.result);\n        })\n    })\n    .catch((error) => {\n      throw error;\n    });\n});\n\ntest.serial('Characters - POST - Create Character', t => {\n  return DB.accessor.query(sql)\n    .then(() => {\n      return request(app)\n        .post('/characters/')\n        .send(postCharacter.body)\n        .then((res) => {\n          t.is(res.status, 200);\n          t.deepEqual(res.body, postCharacter.result);\n        })\n    })\n    .catch((error) => {\n      throw error;\n    })\n});\n\ntest.serial('Characters - DELETE - Delete Character with id ' + deleteCharacter.parameters.id, t => {\n  return DB.accessor.query(sql)\n    .then(() => {\n      return request(app)\n        .delete('/characters/' + deleteCharacter.parameters.id)\n        .then((res) => {\n          t.is(res.status, 200);\n          t.deepEqual(res.body, deleteCharacter.result);\n        })\n    })\n    .catch((error) => {\n      throw error;\n    });\n});\n\ntest.serial('Characters - PUT - Update Character with id ' + putCharacter.parameters.id, t => {\n  return DB.accessor.query(sql)\n    .then(() => {\n      return request(app)\n        .put('/characters/' + putCharacter.parameters.id)\n        .send(putCharacter.body)\n        .then((res) => {\n          t.is(res.status, 200);\n          t.deepEqual(res.body, putCharacter.result);\n        })\n    })\n    .catch((error) => {\n      throw error;\n    });\n});"]}