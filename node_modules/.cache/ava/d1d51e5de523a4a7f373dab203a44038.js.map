{"version":3,"sources":["alliances-tests.js"],"names":["request","require","app","DB","getAlliances","getAllianceOne","postAlliance","deleteAlliance","putAlliance","sql","serial","t","accessor","query","then","get","res","is","status","deepEqual","body","result","catch","error","parameters","id","post","send","delete","put"],"mappings":"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","file":"alliances-tests.js","sourcesContent":["import test from 'ava';\r\nconst request = require('supertest');\r\nconst app = require('../app');\r\nconst DB = require('../models/Database');\r\n\r\n// The awaited results\r\nconst getAlliances = require('./results/alliances/get-alliances.json');\r\nconst getAllianceOne = require('./results/alliances/get-alliances-1.json');\r\nconst postAlliance = require('./results/alliances/post-alliances.json');\r\nconst deleteAlliance = require('./results/alliances/delete-alliances-1.json');\r\nconst putAlliance = require('./results/alliances/put-alliances-1.json');\r\nconst sql = DB.sql('../dumps/test-data.sql');\r\n\r\ntest.serial('Alliances - GET - Get all alliances', t => {\r\n  return DB.accessor.query(sql)\r\n    .then(() => {\r\n      return request(app)\r\n        .get('/alliances')\r\n        .then((res) => {\r\n          t.is(res.status, 200);\r\n          t.deepEqual(res.body, getAlliances.result);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n});\r\n\r\ntest.serial('Alliances - GET - Get alliance id ' + getAllianceOne.parameters.id, t => {\r\n  return DB.accessor.query(sql)\r\n    .then(() => {\r\n      return request(app)\r\n        .get('/alliances/' + getAllianceOne.parameters.id)\r\n        .then((res) => {\r\n          t.is(res.status, 200);\r\n          t.deepEqual(res.body, getAllianceOne.result);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n});\r\n\r\ntest.serial('Alliances - POST - Create Alliance', t => {\r\n  return DB.accessor.query(sql)\r\n    .then(() => {\r\n      return request(app)\r\n        .post('/alliances/')\r\n        .send(postAlliance.body)\r\n        .then((res) => {\r\n          t.is(res.status, 200);\r\n          t.deepEqual(res.body, postAlliance.result);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    })\r\n});\r\n\r\ntest.serial('Alliances - DELETE - Delete Alliance with id ' + deleteAlliance.parameters.id, t => {\r\n  return DB.accessor.query(sql)\r\n    .then(() => {\r\n      return request(app)\r\n        .delete('/alliances/' + deleteAlliance.parameters.id)\r\n        .then((res) => {\r\n          t.is(res.status, 200);\r\n          t.deepEqual(res.body, deleteAlliance.result);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n});\r\n\r\ntest.serial('Alliances - PUT - Update Alliance with id ' + putAlliance.parameters.id, t => {\r\n  return DB.accessor.query(sql)\r\n    .then(() => {\r\n      return request(app)\r\n        .put('/alliances/' + putAlliance.parameters.id)\r\n        .send(putAlliance.body)\r\n        .then((res) => {\r\n          t.is(res.status, 200);\r\n          t.deepEqual(res.body, putAlliance.result);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n});"]}