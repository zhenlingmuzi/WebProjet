{"version":3,"sources":["advanced-routes-tests.js"],"names":["request","require","app","DB","getAllianceUsers","getAllianceCharacters","getUserCharacters","getCharactersWithClass","getAllianceCharactersWithClass","getAlliesInRadius","getEnemiesInRadius","sql","serial","t","accessor","query","then","get","parameters","id","res","is","status","deepEqual","body","result","catch","error","class","radius"],"mappings":";;;;;AAAA;;;;;;AACA,MAAMA,UAAUC,QAAQ,WAAR,CAAhB;AACA,MAAMC,MAAMD,QAAQ,QAAR,CAAZ;AACA,MAAME,KAAKF,QAAQ,oBAAR,CAAX;;AAEA;AACA,MAAMG,mBAAmBH,QAAQ,mDAAR,CAAzB;AACA,MAAMI,wBAAwBJ,QAAQ,wDAAR,CAA9B;AACA,MAAMK,oBAAoBL,QAAQ,oDAAR,CAA1B;AACA,MAAMM,yBAAyBN,QAAQ,qDAAR,CAA/B;AACA,MAAMO,iCAAiCP,QAAQ,8DAAR,CAAvC;AACA,MAAMQ,oBAAoBR,QAAQ,qDAAR,CAA1B;AACA,MAAMS,qBAAqBT,QAAQ,sDAAR,CAA3B;;AAEA,MAAMU,MAAMR,GAAGQ,GAAH,CAAO,yBAAP,CAAZ;;AAEA,cAAKC,MAAL,CAAY,4CAAZ,EAA0DC,KAAK;AAC7D,SAAOV,GAAGW,QAAH,CAAYC,KAAZ,CAAkBJ,GAAlB,EACJK,IADI,CACC,MAAM;AACV,WAAOhB,QAAQE,GAAR,EACJe,GADI,CACA,gBAAgBb,iBAAiBc,UAAjB,CAA4BC,EAA5C,GAAiD,QADjD,EAEJH,IAFI,CAEEI,GAAD,IAAS;AAAA;AAAA;AAAA;;AACbP,QAAEQ,EAAF,uBAAK,sCAAIC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiB,GAAjB;AACAT,QAAEU,SAAF,yBAAY,uCAAIC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAsB,oDAAiBC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KALI,CAAP;AAMD,GARI,EASJC,KATI,CASGC,KAAD,IAAW;AAChB,UAAMA,KAAN;AACD,GAXI,CAAP;AAYD,CAbD;;AAeA,cAAKf,MAAL,CAAY,iDAAZ,EAA+DC,KAAK;AAClE,SAAOV,GAAGW,QAAH,CAAYC,KAAZ,CAAkBJ,GAAlB,EACJK,IADI,CACC,MAAM;AACV,WAAOhB,QAAQE,GAAR,EACJe,GADI,CACA,gBAAgBZ,sBAAsBa,UAAtB,CAAiCC,EAAjD,GAAsD,aADtD,EAEJH,IAFI,CAEEI,GAAD,IAAS;AAAA;AAAA;AAAA;;AACbP,QAAEQ,EAAF,yBAAK,uCAAIC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiB,GAAjB;AACAT,QAAEU,SAAF,yBAAY,uCAAIC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAsB,yDAAsBC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KALI,CAAP;AAMD,GARI,EASJC,KATI,CASGC,KAAD,IAAW;AAChB,UAAMA,KAAN;AACD,GAXI,CAAP;AAYD,CAbD;;AAeA,cAAKf,MAAL,CAAY,0CAAZ,EAAwDC,KAAK;AAC3D,SAAOV,GAAGW,QAAH,CAAYC,KAAZ,CAAkBJ,GAAlB,EACJK,IADI,CACC,MAAM;AACV,WAAOhB,QAAQE,GAAR,EACJe,GADI,CACA,YAAYX,kBAAkBY,UAAlB,CAA6BC,EAAzC,GAA8C,aAD9C,EAEJH,IAFI,CAEEI,GAAD,IAAS;AAAA;AAAA;AAAA;;AACbP,QAAEQ,EAAF,yBAAK,uCAAIC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiB,GAAjB;AACAT,QAAEU,SAAF,yBAAY,uCAAIC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAsB,qDAAkBC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KALI,CAAP;AAMD,GARI,EASJC,KATI,CASGC,KAAD,IAAW;AAChB,UAAMA,KAAN;AACD,GAXI,CAAP;AAYD,CAbD;;AAeA,cAAKf,MAAL,CAAY,gDAAZ,EAA8DC,KAAK;AACjE,SAAOV,GAAGW,QAAH,CAAYC,KAAZ,CAAkBJ,GAAlB,EACJK,IADI,CACC,MAAM;AACV,WAAOhB,QAAQE,GAAR,EACJe,GADI,CACA,qBAAqBV,uBAAuBW,UAAvB,CAAkCU,KADvD,EAEJZ,IAFI,CAEEI,GAAD,IAAS;AAAA;AAAA;AAAA;;AACbP,QAAEQ,EAAF,2BAAK,wCAAIC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiB,GAAjB;AACAT,QAAEU,SAAF,2BAAY,wCAAIC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAsB,2DAAuBC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KALI,CAAP;AAMD,GARI,EASJC,KATI,CASGC,KAAD,IAAW;AAChB,UAAMA,KAAN;AACD,GAXI,CAAP;AAYD,CAbD;;AAeA,cAAKf,MAAL,CAAY,4DAAZ,EAA0EC,KAAK;AAC7E,SAAOV,GAAGW,QAAH,CAAYC,KAAZ,CAAkBJ,GAAlB,EACJK,IADI,CACC,MAAM;AACV,WAAOhB,QAAQE,GAAR,EACJe,GADI,CACA,gBAAgBT,+BAA+BU,UAA/B,CAA0CC,EAA1D,GAA+D,cAA/D,GAAgFX,+BAA+BU,UAA/B,CAA0CU,KAD1H,EAEJZ,IAFI,CAEEI,GAAD,IAAS;AAAA;AAAA;AAAA;;AACbP,QAAEQ,EAAF,2BAAK,wCAAIC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiB,GAAjB;AACAT,QAAEU,SAAF,2BAAY,wCAAIC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAsB,mEAA+BC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KALI,CAAP;AAMD,GARI,EASJC,KATI,CASGC,KAAD,IAAW;AAChB,UAAMA,KAAN;AACD,GAXI,CAAP;AAYD,CAbD;;AAeA,cAAKf,MAAL,CAAY,2CAAZ,EAAyDC,KAAK;AAC5D,SAAOV,GAAGW,QAAH,CAAYC,KAAZ,CAAkBJ,GAAlB,EACJK,IADI,CACC,MAAM;AACV,WAAOhB,QAAQE,GAAR,EACJe,GADI,CACA,iBAAiBR,kBAAkBS,UAAlB,CAA6BC,EAA9C,GAAmD,UAAnD,GAAgEV,kBAAkBS,UAAlB,CAA6BW,MAD7F,EAEJb,IAFI,CAEEI,GAAD,IAAS;AAAA;AAAA;AAAA;;AACbP,QAAEQ,EAAF,2BAAK,wCAAIC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiB,GAAjB;AACAT,QAAEU,SAAF,2BAAY,wCAAIC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAsB,sDAAkBC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KALI,CAAP;AAMD,GARI,EASJC,KATI,CASGC,KAAD,IAAW;AAChB,UAAMA,KAAN;AACD,GAXI,CAAP;AAYD,CAbD;;AAeA,cAAKf,MAAL,CAAY,4CAAZ,EAA0DC,KAAK;AAC7D,SAAOV,GAAGW,QAAH,CAAYC,KAAZ,CAAkBJ,GAAlB,EACJK,IADI,CACC,MAAM;AACV,WAAOhB,QAAQE,GAAR,EACJe,GADI,CACA,iBAAiBP,mBAAmBQ,UAAnB,CAA8BC,EAA/C,GAAoD,YAApD,GAAmET,mBAAmBQ,UAAnB,CAA8BW,MADjG,EAEJb,IAFI,CAEEI,GAAD,IAAS;AAAA;AAAA;AAAA;;AACbP,QAAEQ,EAAF,2BAAK,wCAAIC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiB,GAAjB;AACAT,QAAEU,SAAF,2BAAY,wCAAIC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAsB,uDAAmBC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KALI,CAAP;AAMD,GARI,EASJC,KATI,CASGC,KAAD,IAAW;AAChB,UAAMA,KAAN;AACD,GAXI,CAAP;AAYD,CAbD","file":"advanced-routes-tests.js","sourcesContent":["import test from 'ava';\r\nconst request = require('supertest');\r\nconst app = require('../app');\r\nconst DB = require('../models/Database');\r\n\r\n// The awaited results\r\nconst getAllianceUsers = require('./advanced-routes-results/get-alliance-users.json');\r\nconst getAllianceCharacters = require('./advanced-routes-results/get-alliance-characters.json');\r\nconst getUserCharacters = require('./advanced-routes-results/get-user-characters.json');\r\nconst getCharactersWithClass = require('./advanced-routes-results/get-characters-class.json');\r\nconst getAllianceCharactersWithClass = require('./advanced-routes-results/get-alliance-characters-class.json');\r\nconst getAlliesInRadius = require('./advanced-routes-results/get-allies-in-radius.json');\r\nconst getEnemiesInRadius = require('./advanced-routes-results/get-enemies-in-radius.json');\r\n\r\nconst sql = DB.sql('../dumps/data-tests.sql');\r\n\r\ntest.serial('Advanced - GET - Get all users in alliance', t => {\r\n  return DB.accessor.query(sql)\r\n    .then(() => {\r\n      return request(app)\r\n        .get('/alliances/' + getAllianceUsers.parameters.id + '/users')\r\n        .then((res) => {\r\n          t.is(res.status, 200);\r\n          t.deepEqual(res.body, getAllianceUsers.result);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n});\r\n\r\ntest.serial('Advanced - GET - Get all characters in alliance', t => {\r\n  return DB.accessor.query(sql)\r\n    .then(() => {\r\n      return request(app)\r\n        .get('/alliances/' + getAllianceCharacters.parameters.id + '/characters')\r\n        .then((res) => {\r\n          t.is(res.status, 200);\r\n          t.deepEqual(res.body, getAllianceCharacters.result);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n});\r\n\r\ntest.serial('Advanced - GET - Get all user characters', t => {\r\n  return DB.accessor.query(sql)\r\n    .then(() => {\r\n      return request(app)\r\n        .get('/users/' + getUserCharacters.parameters.id + '/characters')\r\n        .then((res) => {\r\n          t.is(res.status, 200);\r\n          t.deepEqual(res.body, getUserCharacters.result);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n});\r\n\r\ntest.serial('Advanced - GET - Get all characters with class', t => {\r\n  return DB.accessor.query(sql)\r\n    .then(() => {\r\n      return request(app)\r\n        .get('/characters/all/' + getCharactersWithClass.parameters.class)\r\n        .then((res) => {\r\n          t.is(res.status, 200);\r\n          t.deepEqual(res.body, getCharactersWithClass.result);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n});\r\n\r\ntest.serial('Advanced - GET - Get all characters in alliance with class', t => {\r\n  return DB.accessor.query(sql)\r\n    .then(() => {\r\n      return request(app)\r\n        .get('/alliances/' + getAllianceCharactersWithClass.parameters.id + '/characters/' + getAllianceCharactersWithClass.parameters.class)\r\n        .then((res) => {\r\n          t.is(res.status, 200);\r\n          t.deepEqual(res.body, getAllianceCharactersWithClass.result);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n});\r\n\r\ntest.serial('Advanced - GET - Get all allies in radius', t => {\r\n  return DB.accessor.query(sql)\r\n    .then(() => {\r\n      return request(app)\r\n        .get('/characters/' + getAlliesInRadius.parameters.id + '/allies/' + getAlliesInRadius.parameters.radius)\r\n        .then((res) => {\r\n          t.is(res.status, 200);\r\n          t.deepEqual(res.body, getAlliesInRadius.result);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n});\r\n\r\ntest.serial('Advanced - GET - Get all enemies in radius', t => {\r\n  return DB.accessor.query(sql)\r\n    .then(() => {\r\n      return request(app)\r\n        .get('/characters/' + getEnemiesInRadius.parameters.id + '/ennemies/' + getEnemiesInRadius.parameters.radius)\r\n        .then((res) => {\r\n          t.is(res.status, 200);\r\n          t.deepEqual(res.body, getEnemiesInRadius.result);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n});"]}